from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def get_operator_list_keyboard(count: int) -> InlineKeyboardMarkup:
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –¥–∏–Ω–∞–º—ñ—á–Ω–∏–º–∏ —á–∏—Å–ª–æ–≤–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ —Ç–∞ –¥–≤–æ–º–∞ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–º–∏:
    - ‚ûï –î–æ–¥–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    - üîô –ù–∞–∑–∞–¥ –¥–æ –ø–∞–Ω–µ–ª—ñ

    :param count: –ö—ñ–ª—å–∫—ñ—Å—Ç—å —á–∏—Å–ª–æ–≤–∏—Ö –∫–Ω–æ–ø–æ–∫
    :return: InlineKeyboardMarkup
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è —á–∏—Å–ª–æ–≤–∏—Ö –∫–Ω–æ–ø–æ–∫ –ø–æ 4 –≤ —Ä—è–¥
    row = []
    for i in range(1, count + 1):
        row.append(InlineKeyboardButton(text=str(i), callback_data=str(i)))
        if len(row) == 4:
            keyboard.inline_keyboard.append(row)
            row = []
    if row:
        keyboard.inline_keyboard.append(row)

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ—Å—Ç—ñ–π–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(
            text="‚ûï –î–æ–¥–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞",
            callback_data="add_operator"
        )
    ])
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –¥–æ –ø–∞–Ω–µ–ª—ñ",
            callback_data="admin_panel"
        )
    ])

    return keyboard

def get_servers_ip_list_keyboard(server_ips: list, back_button_callback_data: str = None, back_button_text:str=None) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è —á–∏—Å–ª–æ–≤–∏—Ö –∫–Ω–æ–ø–æ–∫ –ø–æ 4 –≤ —Ä—è–¥
    row = []
    for ip in server_ips:
        row.append(InlineKeyboardButton(text=ip, callback_data=ip))
        keyboard.inline_keyboard.append(row)
        row = []

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ—Å—Ç—ñ–π–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(
            text="‚ûï –î–æ–¥–∞—Ç–∏ —Å–µ—Ä–≤–µ—Ä",
            callback_data="add_server"
        )
    ])
    if back_button_callback_data is not None:
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(
                text=back_button_text,
                callback_data=back_button_callback_data
            )
        ])
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(
            text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏",
            callback_data="admin_panel"
        )
    ])

    return keyboard


def get_confirm_add_operator_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–æ–¥–∞—Ç–∏", callback_data="confirm_add_operator"),
            InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏", callback_data="edit_add_operator")
        ],
        [
            InlineKeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="add_proxies")
        ]
    ])


def get_protocols_list_keyboard(protocols: list) -> InlineKeyboardMarkup:
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –∑ –Ω–∞–∑–≤–∞–º–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤ —Ç–∞ –∫–Ω–æ–ø–∫–æ—é "–ù–∞–∑–∞–¥".

    :param protocols: —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–Ω–∏–∫—ñ–≤ –∑ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º–∏ (–º–∞—é—Ç—å –∫–ª—é—á 'id' —ñ 'value')
    :return: InlineKeyboardMarkup
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    row = []
    for protocol in protocols:
        btn = InlineKeyboardButton(
            text=protocol["value"],
            callback_data=str(protocol["id"])
        )
        keyboard.inline_keyboard.append([btn])

    keyboard.inline_keyboard.append([
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –¥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ñ–≤",
            callback_data="add_proxies"
        )
    ])
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(
            text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏",
            callback_data="admin_panel"
        )
    ])

    return keyboard

from aiogram import F, Bot, Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove

from app.handlers.profile_settings import EditSettingsStates
from app.keyboards.registration import get_registration_keyboard
from app.database.requests.user import user_exists
from app.menu.menu import send_main_menu
from config import BOT_NAME

router = Router()


@router.message(CommandStart())
async def start_handler(message: Message, state: FSMContext,bot:Bot):
    await state.clear()

    for msg_id in [message.message_id - 1, message.message_id - 2]:
        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=msg_id)
        except Exception:
            continue

    # –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    welcome_text = (
        f"üåü <b>–í—ñ—Ç–∞—î–º–æ –≤ {BOT_NAME}, {message.from_user.first_name}!</b> üåü\n\n"
        "üõ°Ô∏è –í–∞—à –Ω–∞–¥—ñ–π–Ω–∏–π –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫ —è–∫—ñ—Å–Ω–∏—Ö –ø—Ä–æ–∫—Å—ñ-—Å–µ—Ä–≤–µ—Ä—ñ–≤\n\n"
        "üéÅ <b>–ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–∏–π –±–æ–Ω—É—Å: +50</b>ü™ô –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é!\n\n"
    )
    await message.answer(welcome_text, parse_mode="HTML")

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
    if not await user_exists(message.from_user.id):
        await message.answer(
            f"–î–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ {BOT_NAME} –≤–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é",
            reply_markup=get_registration_keyboard()
        )
    else:
        await send_main_menu(tg_id=message.from_user.id, message=message)


@router.message(EditSettingsStates.waiting_for_changes, F.text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é")
async def back_from_settings_handler(message: Message, state: FSMContext, bot: Bot):
    await state.clear()
    await message.answer("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", reply_markup=ReplyKeyboardRemove())

    await send_main_menu(tg_id=message.from_user.id, message=message)

    # –°–ø—Ä–æ–±–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    for msg_id in [message.message_id - 1, message.message_id - 2]:
        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=msg_id)
        except Exception:
            continue


@router.callback_query(F.data == "back_to_menu")
async def back_to_menu_handler(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await send_main_menu(tg_id=callback.from_user.id, is_callback=True, callback=callback)
